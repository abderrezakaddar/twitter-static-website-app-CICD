A ajouter dans dans le vagrantfile :
run le conteneur registry :
1- docker run -d -p 5000:5000 --restart=always --name registry registry:2


docker run -d -p 5000:5000 --restart=always --name registry -v $(pwd)/docker-registry:/var/lib/registry registry:latest


run l'IHM pour exploiter le registry :

2-docker run -d --name ui-registry -p 9000:80 -e REGISTRY_TITLE="REGISTRY GROUPE 2" -e REGISTRY_URL="http://172.17.0.1:5000/" joxit/docker-registry-ui:1.5-static



3- pour consommer le registry avec l'IHM : http://192.168.99.10:9000/
5- sudo su -
{
    "insecure-registries" : [ "hostname.cloudapp.net:5000" ]
}

6-




1- docker tag filrougegroupe2/twitter-static-website:v4 localhost:5000/filrougegroupe2/twitter-static-website:v4
(docker tag $IMAGE_NAME:$IMAGE_TAG localhost:5000/$IMAGE_NAME:$IMAGE_TAG)
2-docker push localhost:5000/filrougegroupe2/twitter-static-website:v4
(docker push localhost:5000/$IMAGE_NAME:$IMAGE_TAG)






docker build -t tweeter-website-ib:v1 .


tester les images 

docker images 

creation de conteneur 
docker run --name twitter-test  -d -e PORT=80 -p 80:80 tweeter-website-ib:v1

tester le conteneur

curl http://192.168.99.10 | grep "Linux Tweet App" 

pusher notre image sur le docker hub
docker login
docker tag tweeter-website-ib:v2 filrougegroupe2/tweeter-website-ib:v2
docker push filrougegroupe2/static-website-ib:v4

automatiser la CI avec jenkins
- supprimer les conteneur qu'ona crée : docker rm -f 8b0d86c786b3
-supprimer les images qu'on a crée : docker rmi -f 4fc131730e32

on lance le jenkinsfile






crer un coker compose 


---
version: '3'

services:
    docker-registry:
        container_name: docker-registry
        image: registry:2
        ports:
            - 5000:5000
        restart: always
        volumes:
            - ./volume:/var/lib/registry
    docker-registry-ui:
        container_name: docker-registry-ui
        image: konradkleine/docker-registry-frontend:v2
        ports:
            - 8081:80
        environment:
            ENV_DOCKER_REGISTRY_HOST: docker-registry
            ENV_DOCKER_REGISTRY_PORT: 5000




modifie le fichier etc/hosts
on ajoute l'adresse de jenkins : jenkins
on modifie le fichier /etc/docker/daemon.json

on ajoutant cette ligne :



{
     "insecure-registries":["jenkins:5000"]
}


on redemare le service docker 
service docker stop
service docker start

mkdir volume

docker-compose -f docker-compose.yml up -d

docker pull alpine
docker tag alpine:latest jenkins:5000/jenkins/alpine-modifie:v1
docker push jenkins:5000/jenkins/alpine-modifie:v1

